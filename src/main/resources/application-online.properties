server.port= 8081

# 线上环境设置为false，这里用到模拟用户
isdebug=false
# 管理员的github_id
user.admin.githubId=10000000
# token有效期
user.token.expire=3600
#server.servlet.session.tracking-modes=

#logging.config=classpath:log4j2.xml
#通用数据源配置
#spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#spring.datasource.url=jdbc:mysql://127.0.0.1:3306/e5?charset=utf8mb4&useSSL=false&serverTimezone=GMT
#spring.datasource.username=root
#spring.datasource.password=123456

# 多数据源配置
#设置默认的数据源或者数据源组,默认值即为master
spring.datasource.dynamic.primary=master
#严格匹配数据源,默认false. true未匹配到指定数据源时抛异常,false使用默认数据源
spring.datasource.dynamic.strict=false
spring.datasource.dynamic.datasource.master.url=jdbc:mysql://127.0.0.1:3306/e5?charset=utf8mb4&useSSL=false&serverTimezone=GMT
spring.datasource.dynamic.datasource.master.username=root
spring.datasource.dynamic.datasource.master.password=123456
spring.datasource.dynamic.datasource.master.driver-class-name=com.mysql.cj.jdbc.Driver

#AUTO_SERVER_PORT=9092; 管理端口
#spring.datasource.dynamic.datasource.h2.url=jdbc:h2:./db/db;DATABASE_TO_LOWER=TRUE;AUTO_SERVER=TRUE;USER=sa;PASSWORD=sa;
#spring.datasource.dynamic.datasource.h2.username=root
#spring.datasource.dynamic.datasource.h2.password=123456
#spring.datasource.dynamic.datasource.h2.driver-class-name=org.h2.Driver

#spring.datasource.dynamic.datasource.td.url=jdbc:TAOS-RS://192.168.1.201:6041/e5/e5?timezone=Asia/Beijing&charset=utf-8
#spring.datasource.dynamic.datasource.td.username=root
#spring.datasource.dynamic.datasource.td.password=taosdata
#spring.datasource.dynamic.datasource.td.driver-class-name=com.taosdata.jdbc.rs.RestfulDriver


#spring.datasource.dynamic.datasource.slave_2.url=ENC(xxxxx)
#spring.datasource.dynamic.datasource.slave_2.username=ENC(xxxxx)
#spring.datasource.dynamic.datasource.slave_2.password=ENC(xxxxx)
#spring.datasource.dynamic.datasource.slave_2.driver-class-name=com.mysql.jdbc.Driver

#influx2
spring.influx.url=http://127.0.0.1:8086
spring.influx.token=HquxNXwOyfgW-f8wzkSUuBz0tswWiFPsTbEnr5jKFS3BY3RcKezDdQF0o5yeoNfaiwQUJhy8YJSIUrVrWSQn8Q==
spring.influx.org=luoye
spring.influx.bucket =e5


#h2
spring.h2.console.path=/h2
spring.h2.console.enabled=true
spring.h2.console.settings.web-allow-others=true
#mybatis-plus
#mybatis-plus配置控制台打印完整带参数SQL语句
mybatis-plus.configuration.log-impl=org.apache.ibatis.logging.stdout.StdOutImpl
mapper-locations=classpath:/mapper/**.xml


# 放行静态资源
web.static.filtrate=/js/**,/css/**,/images/**,/fonts/**,/lib/**,/authority_error,/favicon.ico,/**.ico,/error,/admin/getDebugAdminToken
web.security.admin=/admin/**,/**,/auth2/**,/outlookLog/**
web.security.user=/user/**,/outlook/**,/auth2/**,/outlookLog/**
web.security.role_anonymous = /auth2/**,/getAnnouncement

# Redis
#Redis服务器地址
spring.redis.host=127.0.0.1
#Redis服务器连接端口
spring.redis.port=6379
# Redis服务器连接密码（默认为空）
spring.redis.password=
#Redis数据库索引（默认为0）
spring.redis.database=1
#连接池最大连接数（使用负值表示没有限制）
spring.redis.jedis.pool.max-active=50
#连接池最大阻塞等待时间（使用负值表示没有限制）
spring.redis.jedis.pool.max-wait=3000
#连接池中的最大空闲连接
spring.redis.jedis.pool.max-idle=20
#连接池中的最小空闲连接
spring.redis.jedis.pool.min-idle=5
#连接超时时间（毫秒）
spring.redis.timeout=4000

#开启 confirm 确认机制
#spring.rabbitmq.publisher-confirms=true
#开启 return 确认机制
spring.rabbitmq.publisher-returns=true
#设置为 true 后 消费者在消息没有被路由到合适队列情况下会被return监听，而不会自动删除
spring.rabbitmq.template.mandatory=true

# 每页显示条数
page.size = 10
# 定时器
qz_cron = 0/20 * * * * ?

#Redis用户Token头前缀设置
#redis.userhead=user.token:
redis.auth2.github=github.state:
redis.auth2.outlook=outlook.state:
redis.user.token=token:

github.client_id=
github.client_secret=

outlook.authorize.url = https://login.microsoftonline.com/common/oauth2/v2.0/authorize?client_id=%s&redirect_uri=%s&response_type=code&scope=openid offline_access Mail.Read&state=%s
outlook.errorMsg = CompactToken validation, Access token has expired, Access token validation failure

outlook.replyUrl=https://e5.qyi.io/outlook/auth2/receive
outlook.replyUrlDebug=http://localhost:4200/outlook/auth2/receive

# 连续错误次数
outlook.error.countMax=3
# 公告txt
announcement=classpath:announcement.txt
# debug模式密码
user.admin.debug.passwd=123456
# 执行调用线程池大小
e5.system.threadPool=10

